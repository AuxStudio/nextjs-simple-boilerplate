{
  "Print to console": {
    "prefix": "log",
    "body": ["console.log('$1');"]
  },
  "Dumb component": {
    "prefix": "dumbr",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "$2",
      "import styles from './styles';",
      "$2",
      "const $1 = () => {",
      "  return (",
      "<div>",
      "  <style jsx>{styles}</style>",
      "</div>",
      ")",
      "};",
      "$2",
      "$1.propTypes = {};",
      "$1.defaultProps = {};",
      "$2",
      "export default $1;",
      "$2"
    ]
  },
  "Functional component": {
    "prefix": "funcr",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "$2",
      "import styles from './styles';",
      "$2",
      "export class $1 extends React.Component {",
      "constructor(props) {",
      "super(props)",
      "$2",
      "this.state = {};",
      "}",
      "$2",
      "  static propTypes = {};",
      "$2",
      "  static defaultProps = {};",
      "$2",
      "  render() {",
      "    return (",
      "      <div className='container'>",
      "        <div />",
      "$2",
      "<style jsx>{styles}</style>",
      "      </div>",
      "    );",
      "  }",
      "}",
      "$2",
      "export default $1;"
    ]
  },
  "Container component": {
    "prefix": "smartr",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "import { connect } from 'react-redux';",
      "$2",
      "export class $1 extends React.Component {",
      "constructor(props) {",
      "super(props)",
      "$2",
      "this.state = {};",
      "}",
      "$2",
      "  static propTypes = {};",
      "$2",
      "  static defaultProps = {};",
      "$2",
      "  render() {",
      "    return (",
      "      <div>",
      "        <div />",
      "      </div>",
      "    );",
      "  }",
      "}",
      "$2",
      "function mapStateToProps(state) {",
      "  return {};",
      "}",
      "$2",
      "export default connect(mapStateToProps)($1);",
      "$2"
    ]
  },
  "Enhancer": {
    "prefix": "enhancer",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "import { connect } from 'react-redux';",
      "$2",
      "export default (ComposedComponent) => {",
      "  class $1 extends React.Component {",
      "    constructor(props) {",
      "      super(props);",
      "$2",
      "      this.state = {};",
      "    }",
      "$2",
      "    static propTypes = {};",
      "$2",
      "    static defaultProps = {};",
      "$2",
      "    render() {",
      "      return <ComposedComponent {...this.props} />;",
      "    }",
      "  }",
      "$2",
      "  function mapStateToProps(state) {",
      "    return {};",
      "  }",
      "$2",
      "  return connect(mapStateToProps)($1);",
      "};"
    ]
  },
  "Stylesheet": {
    "prefix": "styler",
    "body": [
      "import css from 'styled-jsx/css'; // eslint-disable-line",
      "$3",
      "const styles = css``;",
      "$3",
      "export default styles;"
    ]
  },
  "Test": {
    "prefix": "test",
    "body": [
      "import React from 'react';",
      "import renderer from 'react-test-renderer';",
      "$2",
      "import $1 from '..';",
      "$2",
      "describe('$1', () => {",
      "const spies = [];",
      "const dispatch = jest.fn();",
      "$2",
      "describe('renders', () => {",
      "it('renders with minimum required props', () => {",
      "const component = renderer.create(<$1 />);",
      "$2",
      "expect(component).toMatchSnapshot();",
      "});",
      "$2",
      "});",
      "$2",
      "describe('methods', () => {",
      "});",
      "$2",
      "describe('lifecycle methods', () => {",
      "});",
      "$2",
      "describe('actions', () => {",
      "});",
      "$2",
      "afterEach(() => {",
      "spies.forEach((spy) => {",
      "if (spy) {",
      "spy.mockClear();",
      "}",
      "});",
      "dispatch.mockClear()",
      "});",
      "});"
    ]
  },
  "String literal": {
    "prefix": "str",
    "body": ["`${$1}`"]
  },
  "Comment": {
    "prefix": "com",
    "body": ["/*", " * $1", " */"]
  },
  "Function": {
    "prefix": "func",
    "body": ["const $1 = () => {};", "$2", "export default $1"]
  },
  "Story": {
    "prefix": "story",
    "body": [
      "import React from 'react';",
      "import { storiesOf } from '@storybook/react';",
      "$2",
      "import $1 from '..';",
      "$2",
      "storiesOf('Components|$1', module).add('default', () => <$1 />);"
    ]
  }
}
